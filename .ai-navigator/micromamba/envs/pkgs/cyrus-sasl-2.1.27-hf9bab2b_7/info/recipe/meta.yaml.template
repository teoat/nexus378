{% set name = "cyrus-sasl" %}
{% set version = "2.1.27" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  # The source releases are strange.  Lets use the tagged source tarball instead
  # - url: https://github.com/cyrusimap/cyrus-sasl/releases/download/cyrus-sasl-{{ version }}/cyrus-sasl-{{ version }}.tar.gz
  #   sha256: 26866b1549b00ffd020f188a43c258017fa1c382b3ddadd8201536f72efb05d5
  # - url: ftp://ftp.cyrusimap.org/cyrus-sasl/{{ name }}-{{ version }}.tar.gz
  
  url: https://github.com/cyrusimap/cyrus-sasl/archive/cyrus-sasl-{{ version }}.tar.gz
  sha256: b564d773803dc4cff42d2bdc04c80f2b105897a724c247817d4e4a99dd6b9976
  
  patches:
    # - 0001-Include-stddef-in-sasl-h-for-size_t.patch
    # Patches for disabling framework things
    #- makefile.patch  # [osx]
    #- include_makefile.patch  # [osx]
    #- lib_makefile.patch  # [osx]
    - osx_arm.patch  # [osx]
    - patches/0001-Include-stddef-in-sasl.h-for-size_t.patch  # [win]
    - patches/0002-adjust-Makefile.am-files-for-osx.patch  # [win]
    - patches/0003-windows-fixes.patch  # [win]
    - patches/0004-openssl-1.1.1-support-on-windows.patch  # [win]
    - patches/0005-win32-Disable-staticopen-stuff.patch  # [win]
    - patches/0006-win32-Define-GCC_FALLTHROUGH.patch  # [win]
    - patches/0007-win32-Skip-building-documentation-doc-folder-has-no-.patch  # [win]
    
build:
  number: 7
  missing_dso_whitelist:          # [osx]
    - /usr/lib/libresolv.9.dylib  # [osx]
    - /usr/lib/libpam.2.dylib     # [osx]
  run_exports:
    # https://abi-laboratory.pro/tracker/timeline/cyrus-sasl/
    # SONAME was changed once in a patch release but it was 6 years ago so
    # giving them the benefit of the doubt that it was a one-off mistake.
    - {{ pin_subpackage('cyrus-sasl') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - libtool  # [unix]
    - pkg-config  # [unix]
    - automake  # [unix]
    - autoconf  # [unix]
    - make  # [unix]
    - groff  # [unix]
    - m2-bash  # [win]
    - m2-patch  # [win]
    - m2-gcc-libs  # [win]
  host:
    - krb5  # [unix]
    - openssl
    - libdb ==6.2.*  # [win]
    - libntlm  # [unix]
    - sqlite  # [win]
    - ldap3  # [win]
  run:
    - krb5
    - openssl
    - libntlm  # [unix]
    - libdb  # [win]
    
test:
  commands:
    - echo "DONE"
    - if not exist %LIBRARY_LIB%\\libsasl.lib exit 1  # [win]

about:
  home: https://www.cyrusimap.org/sasl/
  license: BSD-3-Clause-Attribution
  license_family: BSD
  license_file: COPYING
  summary: |
    This is the Cyrus SASL API implementation. It can be used on the client or server side to provide
    authentication and authorization services. See RFC 4422 for more information.
  description: |
    Simple Authentication and Security Layer (SASL) is a specification that describes how
    authentication mechanisms can be plugged into an application protocol on the wire. Cyrus
    SASL is an implementation of SASL that makes it easy for application developers to integrate
    authentication mechanisms into their application in a generic way.
  dev_url: https://github.com/cyrusimap/cyrus-sasl
  doc_url: https://www.cyrusimap.org/sasl/

extra:
  recipe-maintainers:
    - mariusvniekerk
    - martindurant
    - mingwandroid
    - wesm
    - StephenSmith25
