From 8f275a7c4593aa34147595a90282cf950a853690 Wed Nov 6 00:00:00 2001
From: John Noller <jnoller@anaconda.com>
Date: Wed Nov 6 14:25:40 2024 -0400
Subject: [PATCH] fix convert_lora_to_gguf.py

convert_lora_to_gguf.py uses relative, unqualified imports that fail when the tools/scripts
are correctly packaged and namespaced. Additionally, there is no main definition to run the script, 
and the logic is contained in the `if __name__ == '__main__':` block breaking the entry point
definitions. 

This patch can be dropped if/when the upstream repo is refactored to follow python package conventions
and the import statement and `if __name__ == '__main__':` block are updated to follow best practices.
---
diff --git a/convert_lora_to_gguf.py b/convert_lora_to_gguf.py
index ed1014ca..d3a7fdbe 100755
--- a/convert_lora_to_gguf.py
+++ b/convert_lora_to_gguf.py
@@ -24,7 +24,7 @@ if 'NO_LOCAL_GGUF' not in os.environ:
 import gguf
 
 # reuse model definitions from convert_hf_to_gguf.py
-from convert_hf_to_gguf import LazyTorchTensor, Model
+from llama_cpp_tools.convert_hf_to_gguf import LazyTorchTensor, Model
 
 logger = logging.getLogger("lora-to-gguf")
 
@@ -274,7 +274,7 @@ def load_hparams_from_hf(hf_model_id: str) -> dict[str, Any]:
     return config.to_dict()
 
 
-if __name__ == '__main__':
+def main():
     args = parse_args()
     logging.basicConfig(level=logging.DEBUG if args.verbose else logging.INFO)
 
