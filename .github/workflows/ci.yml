permissions:
  contents: read
name: Build, Lint, and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Desktop/Nexus/forensic_reconciliation_app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ai_service/requirements.txt
          pip install pylint black isort pytest

      - name: Install Node.js dependencies
        run: |
          npm ci
        working-directory: ./Desktop/Nexus/forensic_reconciliation_app/api_gateway

      - name: Lint with Pylint
        run: |
          pylint --rcfile=pyproject.toml ai_service/

      - name: Check formatting with Black
        run: |
          black --check --config=pyproject.toml .

      - name: Check import order with isort
        run: |
          isort --check-only --settings-path=pyproject.toml .

      - name: Run tests with Pytest
        run: |
          pytest --cov=./ai_service --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # optional
          fail_ci_if_error: true

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push Docker images
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml push

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images for scanning
        run: |
          docker-compose build
        working-directory: ./Desktop/Nexus/forensic_reconciliation_app

      - name: Run Trivy vulnerability scanner on api_gateway
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'forensic_reconciliation_app-api_gateway:dev'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on ai_service
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'forensic_reconciliation_app-ai_service:dev'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
