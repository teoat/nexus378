# Forensic Reconciliation + Fraud Platform - MinIO Configuration
# MinIO Object Storage Configuration

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server address and port
address = ":9000"
console-address = ":9001"

# Root credentials
root-user = "${MINIO_ROOT_USER:-minioadmin}"
root-password = "${MINIO_ROOT_PASSWORD:-forensic_secure_2024}"

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Data directory
data-dir = "/data"

# Cache configuration
cache-drives = "/cache"
cache-expiry = "90h"
cache-quota = "80"
cache-exclude = "*.pdf;*.doc;*.docx;*.xls;*.xlsx"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# TLS configuration
tls-cert = "/certs/public.crt"
tls-key = "/certs/private.key"

# CORS configuration
cors-allow-origin = "*"
cors-allow-methods = "GET,POST,PUT,DELETE,HEAD,OPTIONS"
cors-allow-headers = "*"
cors-expose-headers = "ETag"

# =============================================================================
# BUCKET CONFIGURATION
# =============================================================================

# Default bucket policy
bucket-policy = "readwrite"

# Bucket notification
notify = {
  "webhook": {
    "1": {
      "enable": true,
      "endpoint": "http://ai_service:8000/webhook/minio",
      "events": ["s3:ObjectCreated:*", "s3:ObjectRemoved:*"]
    }
  }
}

# =============================================================================
# COMPLIANCE CONFIGURATION
# =============================================================================

# Object locking (WORM)
object-lock = true

# Versioning
versioning = true

# Retention
retention = "365d"

# =============================================================================
# ENCRYPTION CONFIGURATION
# =============================================================================

# Server-side encryption
encryption = {
  "sse-s3": {
    "enable": true,
    "kms": {
      "enable": false
    }
  }
}

# =============================================================================
# COMPRESSION CONFIGURATION
# =============================================================================

# Compression
compress = true
compress-extensions = ".txt,.log,.csv,.json,.xml,.html,.css,.js"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level
log-level = "info"

# Audit logging
audit-log = {
  "enable": true,
  "filename": "/var/log/minio/audit.log",
  "format": "json"
}

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Metrics
metrics = {
  "enable": true,
  "address": ":9000",
  "path": "/metrics"
}

# Health check
health-check = {
  "enable": true,
  "interval": "30s"
}

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Connection limits
max-connections = 10000
max-requests = 1000

# Timeouts
idle-timeout = 60s
read-timeout = 300s
write-timeout = 300s

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Memory cache
memory-cache = {
  "enable": true,
  "size": "1GB",
  "expiry": "1h"
}

# Disk cache
disk-cache = {
  "enable": true,
  "drives": ["/cache"],
  "expiry": "90h",
  "quota": "80%"
}

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup
backup = {
  "enable": true,
  "schedule": "0 2 * * *",
  "retention": "30d",
  "destination": "/backup"
}

# =============================================================================
# REPLICATION CONFIGURATION
# =============================================================================

# Replication
replication = {
  "enable": false,
  "destination": "",
  "credentials": {
    "access-key": "",
    "secret-key": ""
  }
}

# =============================================================================
# CUSTOM POLICIES
# =============================================================================

# Evidence bucket policy
evidence-bucket-policy = {
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "AWS": ["*"]
      },
      "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject"
      ],
      "Resource": [
        "arn:aws:s3:::evidence-store/*"
      ],
      "Condition": {
        "StringEquals": {
          "aws:PrincipalTag/Role": "investigator"
        }
      }
    }
  ]
}

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================

# AI Service webhook
ai-service-webhook = {
  "enable": true,
  "endpoint": "http://ai_service:8000/webhook/minio",
  "events": [
    "s3:ObjectCreated:*",
    "s3:ObjectRemoved:*",
    "s3:ObjectAccessed:*"
  ],
  "filters": {
    "prefix": "evidence/",
    "suffix": ".pdf,.doc,.docx,.xls,.xlsx,.jpg,.png,.txt"
  }
}

# =============================================================================
# COMPLIANCE FEATURES
# =============================================================================

# Chain of custody
chain-of-custody = {
  "enable": true,
  "logging": true,
  "audit": true
}

# Data retention
data-retention = {
  "enable": true,
  "policy": "legal-hold",
  "duration": "10y"
}

# Access logging
access-logging = {
  "enable": true,
  "target": "evidence-access.log"
}

# =============================================================================
# INTEGRATION CONFIGURATION
# =============================================================================

# PostgreSQL integration
postgres-integration = {
  "enable": true,
  "dsn": "postgres://postgres:forensic_secure_2024@postgres:5432/forensic_reconciliation?sslmode=disable",
  "table": "evidence_metadata"
}

# Redis integration
redis-integration = {
  "enable": true,
  "address": "redis:6379",
  "password": "forensic_secure_2024",
  "db": 0
}

# =============================================================================
# SECURITY HARDENING
# =============================================================================

# Security headers
security-headers = {
  "X-Content-Type-Options": "nosniff",
  "X-Frame-Options": "DENY",
  "X-XSS-Protection": "1; mode=block",
  "Strict-Transport-Security": "max-age=31536000; includeSubDomains"
}

# Rate limiting
rate-limit = {
  "enable": true,
  "requests": 1000,
  "window": "1m"
}

# IP filtering
ip-filter = {
  "enable": false,
  "allow": ["0.0.0.0/0"],
  "deny": []
}
