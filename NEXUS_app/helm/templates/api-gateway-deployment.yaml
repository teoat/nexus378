apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api-gateway
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "forensic-platform.labels" . | nindent 4 }}
    app: api-gateway
spec:
  replicas: {{ .Values.apiGateway.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "forensic-platform.selectorLabels" . | nindent 6 }}
      app: api-gateway
  template:
    metadata:
      labels:
        {{- include "forensic-platform.selectorLabels" . | nindent 8 }}
        app: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Release.Name }}-api-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api-gateway
        image: "{{ .Values.apiGateway.image.repository }}:{{ .Values.apiGateway.image.tag }}"
        imagePullPolicy: {{ .Values.apiGateway.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: ENCRYPTION_SERVICE_URL
          value: "http://{{ .Release.Name }}-encryption-service:8000"
        - name: HASH_SERVICE_URL
          value: "http://{{ .Release.Name }}-hash-service:8000"
        - name: CHAIN_OF_CUSTODY_URL
          value: "http://{{ .Release.Name }}-chain-of-custody-service:8000"
        - name: DATA_RETENTION_URL
          value: "http://{{ .Release.Name }}-data-retention-service:8000"
        - name: GDPR_SERVICE_URL
          value: "http://{{ .Release.Name }}-gdpr-service:8000"
        resources:
          {{- toYaml .Values.apiGateway.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-api-gateway
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "forensic-platform.labels" . | nindent 4 }}
    app: api-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    {{- include "forensic-platform.selectorLabels" . | nindent 4 }}
    app: api-gateway