apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-forensic-app
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "forensic-platform.labels" . | nindent 4 }}
    app: forensic-app
spec:
  replicas: {{ .Values.forensicApp.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "forensic-platform.selectorLabels" . | nindent 6 }}
      app: forensic-app
  template:
    metadata:
      labels:
        {{- include "forensic-platform.selectorLabels" . | nindent 8 }}
        app: forensic-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Release.Name }}-forensic-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: forensic-app
        image: "{{ .Values.forensicApp.image.repository }}:{{ .Values.forensicApp.image.tag }}"
        imagePullPolicy: {{ .Values.forensicApp.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8000
          protocol: TCP
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-redis
              key: redis-url
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-url
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq
              key: rabbitmq-url
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-elasticsearch
              key: elasticsearch-url
        - name: MINIO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio
              key: minio-url
        resources:
          {{- toYaml .Values.forensicApp.resources | nindent 10 }}
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        - name: reports
          mountPath: /app/reports
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-forensic-app-logs
      - name: uploads
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-forensic-app-uploads
      - name: reports
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-forensic-app-reports
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-forensic-app
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "forensic-platform.labels" . | nindent 4 }}
    app: forensic-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 8000
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    {{- include "forensic-platform.selectorLabels" . | nindent 4 }}
    app: forensic-app