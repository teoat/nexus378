apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: forensic-platform
data:
  NODE_ENV: "production"
  PORT: "3000"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  RABBITMQ_HOST: "rabbitmq"
  RABBITMQ_PORT: "5672"
  RABBITMQ_VHOST: "forensic_vhost"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "forensic_reconciliation_prod"
  NEO4J_HOST: "neo4j"
  NEO4J_PORT: "7687"
  MINIO_HOST: "minio"
  MINIO_PORT: "9000"
  AI_SERVICE_URL: "http://ai-service:8000"
---
apiVersion: v1
kind: Secret
metadata:
  name: api-gateway-secret
  namespace: forensic-platform
type: Opaque
data:
  POSTGRES_USER: Zm9yZW5zaWNfcHJvZF91c2Vy # forensic_prod_user
  POSTGRES_PASSWORD: U2VjdXJlUHJvZFBhc3N3b3JkMjAyNCE= # SecureProdPassword2024!
  REDIS_PASSWORD: U2VjdXJlUmVkaXNQYXNzd29yZDIwMjQh # SecureRedisPassword2024!
  RABBITMQ_USER: Zm9yZW5zaWNfdXNlcg== # forensic_user
  RABBITMQ_PASSWORD: U2VjdXJlUmFiYml0TVFQYXNzd29yZDIwMjQh # SecureRabbitMQPassword2024!
  NEO4J_USER: bmVvNGo= # neo4j
  NEO4J_PASSWORD: U2VjdXJlTmVvNGpQYXNzd29yZDIwMjQh # SecureNeo4jPassword2024!
  MINIO_ACCESS_KEY: Zm9yZW5zaWNfdXNlcg== # forensic_user
  MINIO_SECRET_KEY: U2VjdXJlTWluaW9QYXNzd29yZDIwMjQh # SecureMinioPassword2024!
  JWT_SECRET: U2VjdXJlSldUU2VjcmV0MjAyNCE= # SecureJWTSecret2024!
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: forensic-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: api-gateway:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: api-gateway-config
        - secretRef:
            name: api-gateway-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: forensic-platform
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: forensic-platform
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  rules:
  - host: api.forensic-platform.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80