#!/usr/bin/env python3
"""
üóÑÔ∏è Database Configuration - Auto-generated by Frenly Real API Engine
"""

import os
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv

load_dotenv()

# Database configuration
DATABASE_URL = os.getenv(
    "DATABASE_URL",
    "postgresql://user:password@localhost:5432/frenly_api"
)

# Create engine
engine = create_engine(DATABASE_URL)

# Create session factory
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Base class for models
Base = declarative_base()

def get_db():
    """Get database session"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

async def init_db():
    """Initialize database"""
    # Import models to ensure they are registered
    from .models import User, Workflow
    
    # Create all tables
    Base.metadata.create_all(bind=engine)
    print("‚úÖ Database initialized successfully")
