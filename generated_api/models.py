#!/usr/bin/env python3
"""
ðŸ“Š Pydantic Models - Auto-generated by Frenly Real API Engine
"""

from pydantic import BaseModel, Field, EmailStr
from typing import Optional, List
from datetime import datetime
from uuid import UUID

class UserBase(BaseModel):
    """Base user model"""
    email: EmailStr
    full_name: Optional[str] = None

class UserCreate(UserBase):
    """User creation model"""
    password: str = Field(..., min_length=8)

class UserUpdate(UserBase):
    """User update model"""
    password: Optional[str] = None

class User(UserBase):
    """User response model"""
    id: UUID
    created_at: datetime
    updated_at: datetime
    
    class Config:
        from_attributes = True

class WorkflowBase(BaseModel):
    """Base workflow model"""
    name: str = Field(..., min_length=1, max_length=255)
    description: Optional[str] = None

class WorkflowCreate(WorkflowBase):
    """Workflow creation model"""
    pass

class WorkflowUpdate(WorkflowBase):
    """Workflow update model"""
    pass

class Workflow(WorkflowBase):
    """Workflow response model"""
    id: UUID
    status: str
    created_at: datetime
    updated_at: datetime
    
    class Config:
        from_attributes = True

class Token(BaseModel):
    """Authentication token model"""
    access_token: str
    token_type: str = "bearer"
    expires_in: int

class TokenData(BaseModel):
    """Token data model"""
    email: Optional[str] = None
